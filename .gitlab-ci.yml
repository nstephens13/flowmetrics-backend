stages:
  - Lint
  - Test
  - Build
  - Deploy

.backendJob:
  image: node:20.2.0-alpine3.18
  rules:
    - if: '$SCHEDULED == "true"' # preventing specific job from running, when pipeline is scheduled
      when: never
    - if: '$CI_COMMIT_REF_NAME == "main"' # if branch == main job gets executed
    - if: '$CI_COMMIT_REF_NAME == "development"' # if branch == development job gets executed
    - if: '$CI_MERGE_REQUEST_TITLE != null' # if merge request title is not null job is never executed
      when: never
    - if: '$CI_MERGE_REQUEST_DRAFT == "false"' # if merge request is not a draft job gets executed
    - exists:
        - '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME' # if merge request branch exists job gets executed
    - changes:
        - './*' # if there are changes in any file job gets executed
        - '.gitlab-ci.yml'

# Backend Pipeline
'Backend-Lint':
  stage: Lint
  script:
    - npm ci
    - npm run lint:no-fix
  extends:
    - .backendJob

'Backend-Test':
  stage: Test
  script:
    - npm ci
    - npm run test
  extends:
    - .backendJob

'Backend-Build':
  stage: Build
  script:
    - npm ci
    - npm run build
  extends:
    - .backendJob

"Image-Build":
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: docker
  stage: Build
  tags:
    - image
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "/certs/client"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
#  only:
#    - main
#    - development

"Frontend-Deployment":
  image: kroniak/ssh-client:latest
  stage: Deploy
  tags:
    - docker
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -i ~/.ssh/id_rsa $VM_USERNAME@$VM_IP -p $SSH_DEPLOYMENT_PORT "
      podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      podman pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG &&
      podman stop flowmetrics-backend &&
      podman run --name flowmetrics-backend -d -p 3000:3000 --rm $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG && exit"
  # only:
    # - main
    # - development